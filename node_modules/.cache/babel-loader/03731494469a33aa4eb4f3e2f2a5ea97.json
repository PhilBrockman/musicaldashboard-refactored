{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/philbrockman/coding/local-coding-projects/musicaldashboard-refactored/src/Layouts/MainContent/MusicBox.js\";\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport RemoveCircle from '@material-ui/icons/RemoveCircle';\nimport Refresh from '@material-ui/icons/Refresh';\nimport NotListedLocationTwoToneIcon from '@material-ui/icons/NotListedLocationTwoTone';\nimport TransitionHover from './IconHovered';\nimport \"./MusicBox.css\";\nimport \"./checkbox.scss\";\nimport \"./MuseNetComponent.css\";\nimport MusicBoxInput from \"./MusicBoxInput\";\nimport Randomizer from \"./Randomize\";\nimport React, { Component } from 'react';\n\nclass MuseNetInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      e.stopPropagation();\n      this.dissmissItem(this.props.item.title);\n    };\n\n    this.dissmissItem = this.props.clickback.bind(this);\n    this.updateValue = this.props.updateValue.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MuseNetComponent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mnc-header centered-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TransitionHover, {\n            children: /*#__PURE__*/_jsxDEV(RemoveCircle, {\n              color: \"secondary\",\n              onClick: this.handleClick\n            }, \"interactive-\" + this.props.item.title, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.props.item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TransitionHover, {\n            children: /*#__PURE__*/_jsxDEV(NotListedLocationTwoToneIcon, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MusicBoxInput, {\n        item: this.props.item,\n        updateValue: this.updateValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass MusicBox extends Component {\n  constructor(props) {\n    super(props);\n    this.dissmissMenuItem = this.props.clickback.bind(this);\n    this.updateValue = this.props.updateValue.bind(this);\n    this.resetState = this.props.resetState.bind(this);\n  }\n\n  resetState() {\n    console.log(\"aoeu\");\n    this.resetState();\n  }\n\n  render() {\n    let relevant = this.props.invokedMenuItems.map(item => {\n      return /*#__PURE__*/_jsxDEV(MuseNetInput, {\n        clickback: this.dissmissMenuItem,\n        item: item,\n        updateValue: this.updateValue\n      }, \"input-\" + item.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this);\n    });\n\n    if (relevant.length === 0) {\n      relevant = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder\",\n        children: \"Customize your song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 10\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-form centered-header\",\n        children: [/*#__PURE__*/_jsxDEV(Randomizer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter email...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TransitionHover, {\n          children: /*#__PURE__*/_jsxDEV(Refresh, {\n            onClick: () => this.resetState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playarea\",\n        children: relevant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MusicBox;","map":{"version":3,"sources":["/Users/philbrockman/coding/local-coding-projects/musicaldashboard-refactored/src/Layouts/MainContent/MusicBox.js"],"names":["Input","Button","RemoveCircle","Refresh","NotListedLocationTwoToneIcon","TransitionHover","MusicBoxInput","Randomizer","React","Component","MuseNetInput","constructor","props","handleClick","e","stopPropagation","dissmissItem","item","title","clickback","bind","updateValue","render","MusicBox","dissmissMenuItem","resetState","console","log","relevant","invokedMenuItems","map","length"],"mappings":"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","sourcesContent":["import Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport RemoveCircle from '@material-ui/icons/RemoveCircle';\nimport Refresh from '@material-ui/icons/Refresh';\nimport NotListedLocationTwoToneIcon from '@material-ui/icons/NotListedLocationTwoTone';\n\nimport TransitionHover from './IconHovered'\n\nimport \"./MusicBox.css\";\nimport \"./checkbox.scss\";\nimport \"./MuseNetComponent.css\"\nimport MusicBoxInput from \"./MusicBoxInput\";\nimport Randomizer from \"./Randomize\"\n\nimport React, {Component} from 'react';\n\nclass MuseNetInput extends Component {\n  constructor(props){\n    super(props);\n    this.dissmissItem = this.props.clickback.bind(this)\n    this.updateValue  = this.props.updateValue.bind(this)\n\n  }\n\n  handleClick = (e) => {\n    e.stopPropagation()\n    this.dissmissItem(this.props.item.title)\n  }\n\n  render(){\n    return (\n      <div className=\"MuseNetComponent\">\n        <div className=\"mnc-header centered-header\">\n          <div>\n            <TransitionHover>\n              <RemoveCircle\n                color=\"secondary\"\n                key={\"interactive-\"+this.props.item.title}\n                onClick={this.handleClick} />\n            </TransitionHover>\n          </div>\n          <div>\n            {this.props.item.title}\n          </div>\n          <div>\n            <TransitionHover>\n              <NotListedLocationTwoToneIcon color=\"primary\" />\n            </TransitionHover>\n          </div>\n        </div>\n        <MusicBoxInput\n          item={this.props.item}\n          updateValue={this.updateValue}\n          />\n      </div>\n    );\n  }\n}\n\nclass MusicBox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.dissmissMenuItem = this.props.clickback.bind(this);\n    this.updateValue      = this.props.updateValue.bind(this)\n    this.resetState       = this.props.resetState.bind(this)\n  }\n\n  resetState() {\n    console.log(\"aoeu\")\n    this.resetState();\n  }\n\n  render() {\n    let relevant = this.props.invokedMenuItems.map(item => {\n      return(\n          <MuseNetInput\n            key={\"input-\"+item.title}\n            clickback={this.dissmissMenuItem }\n            item={item}\n            updateValue={this.updateValue}\n            />\n      );\n    })\n\n    if(relevant.length === 0){\n      relevant =\n        (<div className=\"placeholder\">Customize your song</div>);\n    }\n\n    return (\n      <div className=\"music-box\">\n        <div className=\"submit-form centered-header\">\n          <Randomizer />\n          <Input\n            placeholder=\"Enter email...\"\n            />\n          <Button\n            variant=\"contained\"\n            color=\"primary\">\n            create</Button>\n          <TransitionHover><Refresh onClick={() => this.resetState} /></TransitionHover>\n        </div>\n        <div className=\"playarea\">\n          {relevant}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MusicBox;\n"]},"metadata":{},"sourceType":"module"}