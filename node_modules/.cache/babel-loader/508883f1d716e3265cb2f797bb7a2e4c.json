{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/philbrockman/coding/local-coding-projects/musicaldashboard-refactored/src/App.js\";\nimport './App.css';\nimport \"./Layouts/Sidebar/SideBar.css\";\nimport Header from './Layouts/Header/Header';\nimport MenuItems from \"./Layouts/Sidebar/MenuItems\";\nimport MusicBox from \"./Layouts/MainContent/MusicBox\";\nimport React, { Component } from 'react';\nimport defaults from './defaultMenuItems';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuItems: defaults.initialState(),\n      sidebarOpen: false\n    };\n    this.handleViewSidebar = this.handleViewSidebar.bind(this);\n    this.handleMenuItemDismissal = this.handleMenuItemDismissal.bind(this);\n    this.updateMenuItemValue = this.updateMenuItemValue.bind(this);\n    this.resetState = this.resetState.bind(this);\n    this.randomizeState = this.randomizeState.bind(this);\n  }\n\n  resetState() {\n    this.setState(prevState => {\n      return { ...prevState,\n        menuItems: defaults.initialState()\n      };\n    });\n  } // return this.to_arr().map(item=> ({\n  //   title: item.title,\n  //   stowed: item.stowed,\n  //   value: item.default\n  // }))\n\n\n  randomizeState() {\n    const options = defaults.to_arr(defaults.menu_items());\n    const newState = options.map(item => {\n      console.log(item.title);\n      let stowed = Math.random() < .5;\n      let value;\n\n      if (!stowed) {\n        switch (item.inputType) {\n          case \"slider\":\n            value = Math.random() * (item.max - item.min) + item.min;\n\n          case \"select\":\n            value = item.options[Math.floor(Math.random() * item.options.length)];\n            break;\n\n          default:\n        }\n      } else {\n        value = item.value;\n      }\n\n      return {\n        title: item.title,\n        stowed: stowed,\n        value: value\n      };\n    });\n    this.setState(prevState => {\n      return { ...prevState,\n        menuItems: newState\n      };\n    });\n  }\n\n  handleMenuItemDismissal(title) {\n    let newMenuItemsState = Object.assign([], this.state.menuItems);\n    const itemIdx = newMenuItemsState.findIndex(item => item.title === title);\n    newMenuItemsState[itemIdx] = { ...newMenuItemsState[itemIdx],\n      stowed: !newMenuItemsState[itemIdx].stowed\n    };\n    this.setState(prevState => {\n      return { ...prevState,\n        menuItems: newMenuItemsState\n      };\n    });\n  }\n\n  updateMenuItemValue(title, newValue) {\n    let newMenuItemsState = Object.assign([], this.state.menuItems);\n    const itemIdx = newMenuItemsState.findIndex(item => item.title === title);\n    newMenuItemsState[itemIdx] = { ...newMenuItemsState[itemIdx],\n      value: newValue\n    };\n    this.setState(prevState => {\n      return { ...prevState,\n        menuItems: newMenuItemsState\n      };\n    });\n  }\n\n  handleViewSidebar() {\n    this.setState(prevState => {\n      return { ...prevState,\n        sidebarOpen: !this.state.sidebarOpen\n      };\n    });\n  }\n\n  render() {\n    var sidebarClass = this.state.sidebarOpen ? 'sidebar open' : 'sidebar closed';\n    var exploded_menu_items = this.state.menuItems.filter(item => !item.stowed);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        toggleSidebar: this.handleViewSidebar,\n        sidebarOpen: this.state.sidebarOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: sidebarClass,\n          children: /*#__PURE__*/_jsxDEV(MenuItems, {\n            invokedMenuItems: exploded_menu_items,\n            menuOpen: this.state.sidebarOpen,\n            clickback: this.handleMenuItemDismissal,\n            children: defaults.menu_items()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MusicBox, {\n          invokedMenuItems: exploded_menu_items,\n          clickback: this.handleMenuItemDismissal,\n          updateValue: this.updateMenuItemValue,\n          resetState: this.resetState,\n          randomizeState: this.randomizeState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/philbrockman/coding/local-coding-projects/musicaldashboard-refactored/src/App.js"],"names":["Header","MenuItems","MusicBox","React","Component","defaults","App","constructor","props","state","menuItems","initialState","sidebarOpen","handleViewSidebar","bind","handleMenuItemDismissal","updateMenuItemValue","resetState","randomizeState","setState","prevState","options","to_arr","menu_items","newState","map","item","console","log","title","stowed","Math","random","value","inputType","max","min","floor","length","newMenuItemsState","Object","assign","itemIdx","findIndex","newValue","render","sidebarClass","exploded_menu_items","filter"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport \"./Layouts/Sidebar/SideBar.css\"\n\nimport Header from './Layouts/Header/Header';\nimport MenuItems from \"./Layouts/Sidebar/MenuItems\"\nimport MusicBox from \"./Layouts/MainContent/MusicBox\"\nimport React, {Component} from 'react'\n\nimport defaults from './defaultMenuItems'\n\nclass App extends Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      menuItems: defaults.initialState(),\n      sidebarOpen: false,\n    };\n\n    this.handleViewSidebar = this.handleViewSidebar.bind(this);\n    this.handleMenuItemDismissal = this.handleMenuItemDismissal.bind(this);\n    this.updateMenuItemValue = this.updateMenuItemValue.bind(this);\n    this.resetState = this.resetState.bind(this)\n    this.randomizeState = this.randomizeState.bind(this)\n  }\n\n  resetState(){\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        menuItems: defaults.initialState(),\n      }\n    });\n  }\n\n  // return this.to_arr().map(item=> ({\n  //   title: item.title,\n  //   stowed: item.stowed,\n  //   value: item.default\n  // }))\n\n  randomizeState(){\n    const options = defaults.to_arr(defaults.menu_items());\n    const newState = options.map(item => {\n      console.log(item.title)\n      let stowed = Math.random() < .5;\n      let value\n\n      if(!stowed) {\n        switch (item.inputType) {\n          case \"slider\":\n            value = Math.random()*(item.max - item.min)+item.min;\n          case \"select\":\n            value = item.options[Math.floor(Math.random()*item.options.length)];\n            break;\n          default:\n\n        }\n      } else {\n        value = item.value\n      }\n\n      return {\n           title: item.title,\n           stowed: stowed,\n           value: value,\n      }\n    })\n\n    this.setState(prevState => {\n      return {...prevState,\n      menuItems: newState,\n      }\n    })\n  }\n\n  handleMenuItemDismissal(title){\n    let newMenuItemsState = Object.assign([], this.state.menuItems);\n    const itemIdx = newMenuItemsState.findIndex(item => item.title===title);\n\n    newMenuItemsState[itemIdx] = {\n      ...newMenuItemsState[itemIdx],\n      stowed: !newMenuItemsState[itemIdx].stowed\n    };\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        menuItems: newMenuItemsState\n      }\n    });\n  }\n\n  updateMenuItemValue(title, newValue){\n    let newMenuItemsState = Object.assign([], this.state.menuItems);\n    const itemIdx = newMenuItemsState.findIndex(item => item.title===title);\n\n    newMenuItemsState[itemIdx] = {\n      ...newMenuItemsState[itemIdx],\n      value: newValue,\n    };\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        menuItems: newMenuItemsState\n      }\n    });\n  }\n\n  handleViewSidebar(){\n    this.setState(prevState => {\n      return{\n        ...prevState,\n        sidebarOpen: !this.state.sidebarOpen,\n      }\n    });\n  }\n\n  render(){\n    var sidebarClass = this.state.sidebarOpen ? 'sidebar open' : 'sidebar closed';\n    var exploded_menu_items = this.state.menuItems.filter(item => !item.stowed)\n\n    return (\n      <div className=\"App\">\n        <Header toggleSidebar={this.handleViewSidebar} sidebarOpen={this.state.sidebarOpen} />\n        <div className=\"content-area\">\n          <div className={sidebarClass}>\n            <MenuItems\n              invokedMenuItems={exploded_menu_items}\n              menuOpen={this.state.sidebarOpen}\n              clickback={this.handleMenuItemDismissal}>\n              {defaults.menu_items()}\n            </MenuItems>\n          </div>\n          <MusicBox\n            invokedMenuItems={exploded_menu_items}\n            clickback={this.handleMenuItemDismissal}\n            updateValue={this.updateMenuItemValue}\n            resetState={this.resetState}\n            randomizeState={this.randomizeState}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}