{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/philbrockman/coding/local-coding-projects/musicaldashboard-refactored/src/App.js\";\nimport './App.css';\nimport \"./Layouts/Sidebar/SideBar.css\";\nimport Header from './Layouts/Header/Header';\nimport MenuItems from \"./Layouts/Sidebar/MenuItems\";\nimport MusicBox from \"./Layouts/MainContent/MusicBox\";\nimport React, { Component } from 'react';\nimport defaults from './defaultMenuItems';\n\nfunction getRandomSubarray(arr, size) {\n  var shuffled = arr.slice(0),\n      i = arr.length,\n      temp,\n      index;\n\n  while (i--) {\n    index = Math.floor((i + 1) * Math.random());\n    temp = shuffled[index];\n    shuffled[index] = shuffled[i];\n    shuffled[i] = temp;\n  }\n\n  return shuffled.slice(0, size);\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuItems: defaults.initialState(),\n      sidebarOpen: false\n    };\n    this.handleViewSidebar = this.handleViewSidebar.bind(this);\n    this.handleMenuItemDismissal = this.handleMenuItemDismissal.bind(this);\n    this.updateMenuItemValue = this.updateMenuItemValue.bind(this);\n    this.resetState = this.resetState.bind(this);\n    this.randomizeState = this.randomizeState.bind(this);\n  }\n\n  resetState() {\n    this.setState(prevState => {\n      return { ...prevState,\n        menuItems: defaults.initialState()\n      };\n    });\n  }\n\n  randomizeState() {\n    const options = defaults.to_arr(defaults.menu_items());\n    const randTitle = options[Math.floor(Math.random() * options.length)].title;\n    const newState = options.map(item => {\n      let notStowed = Math.random() < .5 || item.title === randTitle;\n      let value = item.value;\n\n      if (notStowed) {\n        switch (item.inputType) {\n          case \"slider\":\n            value = Math.random() * (item.max - item.min) + item.min;\n            break;\n\n          case \"select\":\n            value = item.options[Math.floor(Math.random() * item.options.length)];\n            break;\n\n          case \"checkboxinput\":\n            value = getRandomSubarray(item.options, 3);\n            break;\n\n          default:\n            console.log('>> broke');\n            break;\n        }\n      }\n\n      return {\n        title: item.title,\n        stowed: !notStowed,\n        value: value\n      };\n    });\n    this.setState(prevState => {\n      return {\n        menuItems: newState,\n        sidebarOpen: true\n      };\n    });\n  }\n\n  handleMenuItemDismissal(title) {\n    let newMenuItemsState = Object.assign([], this.state.menuItems);\n    const itemIdx = newMenuItemsState.findIndex(item => item.title === title);\n    newMenuItemsState[itemIdx] = { ...newMenuItemsState[itemIdx],\n      stowed: !newMenuItemsState[itemIdx].stowed\n    };\n    this.setState(prevState => {\n      return { ...prevState,\n        menuItems: newMenuItemsState\n      };\n    });\n  }\n\n  updateMenuItemValue(title, newValue) {\n    let newMenuItemsState = Object.assign([], this.state.menuItems);\n    const itemIdx = newMenuItemsState.findIndex(item => item.title === title);\n    newMenuItemsState[itemIdx] = { ...newMenuItemsState[itemIdx],\n      value: newValue\n    };\n    this.setState(prevState => {\n      return { ...prevState,\n        menuItems: newMenuItemsState\n      };\n    });\n  }\n\n  handleViewSidebar() {\n    this.setState(prevState => {\n      return { ...prevState,\n        sidebarOpen: !this.state.sidebarOpen\n      };\n    });\n  }\n\n  render() {\n    var sidebarClass = this.state.sidebarOpen ? 'sidebar open' : 'sidebar closed';\n    var exploded_menu_items = this.state.menuItems.filter(item => !item.stowed);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        toggleSidebar: this.handleViewSidebar,\n        sidebarOpen: this.state.sidebarOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: sidebarClass,\n          children: /*#__PURE__*/_jsxDEV(MenuItems, {\n            invokedMenuItems: exploded_menu_items,\n            menuOpen: this.state.sidebarOpen,\n            clickback: this.handleMenuItemDismissal,\n            children: defaults.menu_items()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MusicBox, {\n          invokedMenuItems: exploded_menu_items,\n          clickback: this.handleMenuItemDismissal,\n          updateValue: this.updateMenuItemValue,\n          resetState: this.resetState,\n          randomizeState: this.randomizeState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/philbrockman/coding/local-coding-projects/musicaldashboard-refactored/src/App.js"],"names":["Header","MenuItems","MusicBox","React","Component","defaults","getRandomSubarray","arr","size","shuffled","slice","i","length","temp","index","Math","floor","random","App","constructor","props","state","menuItems","initialState","sidebarOpen","handleViewSidebar","bind","handleMenuItemDismissal","updateMenuItemValue","resetState","randomizeState","setState","prevState","options","to_arr","menu_items","randTitle","title","newState","map","item","notStowed","value","inputType","max","min","console","log","stowed","newMenuItemsState","Object","assign","itemIdx","findIndex","newValue","render","sidebarClass","exploded_menu_items","filter"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport \"./Layouts/Sidebar/SideBar.css\"\n\nimport Header from './Layouts/Header/Header';\nimport MenuItems from \"./Layouts/Sidebar/MenuItems\"\nimport MusicBox from \"./Layouts/MainContent/MusicBox\"\nimport React, {Component} from 'react'\n\nimport defaults from './defaultMenuItems'\n\n\nfunction getRandomSubarray(arr, size) {\n    var shuffled = arr.slice(0), i = arr.length, temp, index;\n    while (i--) {\n        index = Math.floor((i + 1) * Math.random());\n        temp = shuffled[index];\n        shuffled[index] = shuffled[i];\n        shuffled[i] = temp;\n    }\n    return shuffled.slice(0, size);\n}\n\nclass App extends Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      menuItems: defaults.initialState(),\n      sidebarOpen: false,\n    };\n\n    this.handleViewSidebar = this.handleViewSidebar.bind(this);\n    this.handleMenuItemDismissal = this.handleMenuItemDismissal.bind(this);\n    this.updateMenuItemValue = this.updateMenuItemValue.bind(this);\n    this.resetState = this.resetState.bind(this)\n    this.randomizeState = this.randomizeState.bind(this)\n  }\n\n  resetState(){\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        menuItems: defaults.initialState(),\n      }\n    });\n  }\n\n\n  randomizeState(){\n    const options = defaults.to_arr(defaults.menu_items());\n\n    const randTitle = options[Math.floor(Math.random()*options.length)].title\n\n    const newState = options.map(item => {\n      let notStowed = Math.random() < .5 || item.title === randTitle;\n      let value = item.value\n\n      if(notStowed) {\n        switch (item.inputType) {\n          case \"slider\":\n            value = Math.random()*(item.max - item.min)+item.min;\n            break;\n          case \"select\":\n            value = item.options[Math.floor(Math.random()*item.options.length)];\n            break;\n          case \"checkboxinput\":\n            value = getRandomSubarray(item.options, 3);\n            break;\n          default:\n            console.log('>> broke')\n            break;\n        }\n      }\n\n      return {\n           title: item.title,\n           stowed: !notStowed,\n           value: value,\n      }\n    })\n\n    this.setState(prevState => {\n      return {\n      menuItems: newState,\n      sidebarOpen: true,\n      }\n    })\n  }\n\n  handleMenuItemDismissal(title){\n    let newMenuItemsState = Object.assign([], this.state.menuItems);\n    const itemIdx = newMenuItemsState.findIndex(item => item.title===title);\n\n    newMenuItemsState[itemIdx] = {\n      ...newMenuItemsState[itemIdx],\n      stowed: !newMenuItemsState[itemIdx].stowed\n    };\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        menuItems: newMenuItemsState\n      }\n    });\n  }\n\n  updateMenuItemValue(title, newValue){\n    let newMenuItemsState = Object.assign([], this.state.menuItems);\n    const itemIdx = newMenuItemsState.findIndex(item => item.title===title);\n\n    newMenuItemsState[itemIdx] = {\n      ...newMenuItemsState[itemIdx],\n      value: newValue,\n    };\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        menuItems: newMenuItemsState\n      }\n    });\n  }\n\n  handleViewSidebar(){\n    this.setState(prevState => {\n      return{\n        ...prevState,\n        sidebarOpen: !this.state.sidebarOpen,\n      }\n    });\n  }\n\n  render(){\n    var sidebarClass = this.state.sidebarOpen ? 'sidebar open' : 'sidebar closed';\n    var exploded_menu_items = this.state.menuItems.filter(item => !item.stowed)\n\n    return (\n      <div className=\"App\">\n        <Header toggleSidebar={this.handleViewSidebar} sidebarOpen={this.state.sidebarOpen} />\n        <div className=\"content-area\">\n          <div className={sidebarClass}>\n            <MenuItems\n              invokedMenuItems={exploded_menu_items}\n              menuOpen={this.state.sidebarOpen}\n              clickback={this.handleMenuItemDismissal}>\n              {defaults.menu_items()}\n            </MenuItems>\n          </div>\n          <MusicBox\n            invokedMenuItems={exploded_menu_items}\n            clickback={this.handleMenuItemDismissal}\n            updateValue={this.updateMenuItemValue}\n            resetState={this.resetState}\n            randomizeState={this.randomizeState}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}