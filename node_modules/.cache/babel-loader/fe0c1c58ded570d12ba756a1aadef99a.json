{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/philbrockman/coding/local-coding-projects/musicaldashboard-refactored/src/App.js\";\nimport './App.css';\nimport \"./Layouts/SideBar.css\";\nimport Header from './Layouts/Header';\nimport MenuItems from \"./Layouts/MenuItems\";\nimport MusicBox from \"./Layouts/MusicBox\";\nimport React, { Component } from 'react';\nimport defaults from './Layouts/defaultMenuItems';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuItems: defaults.initialState(),\n      sidebarOpen: true\n    };\n    this.handleViewSidebar = this.handleViewSidebar.bind(this);\n    this.handleMenuItemDismissal = this.handleMenuItemDismissal.bind(this);\n    this.updateMenuItemValue = this.updateMenuItemValue.bind(this);\n  }\n\n  handleMenuItemDismissal(title) {\n    console.log(\"swapping states: \" + title);\n    let newMenuItemsState = Object.assign([], this.state.menuItems);\n    const itemIdx = newMenuItemsState.findIndex(item => item.title === title);\n    newMenuItemsState[itemIdx] = { ...newMenuItemsState[itemIdx],\n      stowed: !newMenuItemsState[itemIdx].stowed\n    };\n    this.setState(prevState => {\n      return { ...prevState,\n        menuItems: newMenuItemsState\n      };\n    });\n  }\n\n  updateMenuItemValue(title, newValue) {\n    console.log(\"updating value: \" + title + \"|\" + newValue);\n    let newMenuItemsState = Object.assign([], this.state.menuItems);\n    const itemIdx = newMenuItemsState.findIndex(item => item.title === title);\n    newMenuItemsState[itemIdx] = { ...newMenuItemsState[itemIdx],\n      value: newValue\n    };\n    this.setState(prevState => {\n      return { ...prevState,\n        menuItems: newMenuItemsState\n      };\n    });\n  }\n\n  handleViewSidebar() {\n    this.setState(prevState => {\n      return { ...prevState,\n        sidebarOpen: !this.state.sidebarOpen\n      };\n    });\n  }\n\n  render() {\n    var sidebarClass = this.state.sidebarOpen ? 'sidebar open' : 'sidebar closed';\n    var exploded_menu_items = this.state.menuItems.filter(item => !item.stowed);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        toggleSidebar: this.handleViewSidebar,\n        sidebarOpen: this.state.sidebarOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: sidebarClass,\n          children: /*#__PURE__*/_jsxDEV(MenuItems, {\n            invokedMenuItems: exploded_menu_items,\n            menuOpen: this.state.sidebarOpen,\n            clickback: this.handleMenuItemDismissal,\n            children: defaults.menu_items()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MusicBox, {\n          invokedMenuItems: exploded_menu_items,\n          clickback: this.handleMenuItemDismissal,\n          updateValue: this.updateMenuItemValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/philbrockman/coding/local-coding-projects/musicaldashboard-refactored/src/App.js"],"names":["Header","MenuItems","MusicBox","React","Component","defaults","App","constructor","props","state","menuItems","initialState","sidebarOpen","handleViewSidebar","bind","handleMenuItemDismissal","updateMenuItemValue","title","console","log","newMenuItemsState","Object","assign","itemIdx","findIndex","item","stowed","setState","prevState","newValue","value","render","sidebarClass","exploded_menu_items","filter","menu_items"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport \"./Layouts/SideBar.css\"\n\nimport Header from './Layouts/Header';\nimport MenuItems from \"./Layouts/MenuItems\"\nimport MusicBox from \"./Layouts/MusicBox\"\nimport React, {Component} from 'react'\n\nimport defaults from './Layouts/defaultMenuItems'\n\nclass App extends Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      menuItems: defaults.initialState(),\n      sidebarOpen: true,\n    };\n\n    this.handleViewSidebar = this.handleViewSidebar.bind(this);\n    this.handleMenuItemDismissal = this.handleMenuItemDismissal.bind(this);\n    this.updateMenuItemValue = this.updateMenuItemValue.bind(this);\n  }\n\n  handleMenuItemDismissal(title){\n    console.log(\"swapping states: \" + title);\n\n    let newMenuItemsState = Object.assign([], this.state.menuItems);\n    const itemIdx = newMenuItemsState.findIndex(item => item.title===title);\n\n    newMenuItemsState[itemIdx] = {\n      ...newMenuItemsState[itemIdx],\n      stowed: !newMenuItemsState[itemIdx].stowed\n    };\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        menuItems: newMenuItemsState\n      }\n    });\n  }\n\n  updateMenuItemValue(title, newValue){\n    console.log (\"updating value: \" + title + \"|\" + newValue);\n\n    let newMenuItemsState = Object.assign([], this.state.menuItems);\n    const itemIdx = newMenuItemsState.findIndex(item => item.title===title);\n\n    newMenuItemsState[itemIdx] = {\n      ...newMenuItemsState[itemIdx],\n      value: newValue,\n    };\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        menuItems: newMenuItemsState\n      }\n    });\n  }\n\n\n\n  handleViewSidebar(){\n    this.setState(prevState => {\n      return{\n        ...prevState,\n        sidebarOpen: !this.state.sidebarOpen,\n      }\n    });\n  }\n\n  render(){\n    var sidebarClass = this.state.sidebarOpen ? 'sidebar open' : 'sidebar closed';\n    var exploded_menu_items = this.state.menuItems.filter(item => !item.stowed)\n\n    return (\n      <div className=\"App\">\n        <Header toggleSidebar={this.handleViewSidebar} sidebarOpen={this.state.sidebarOpen} />\n        <div className=\"content-area\">\n          <div className={sidebarClass}>\n            <MenuItems\n              invokedMenuItems={exploded_menu_items}\n              menuOpen={this.state.sidebarOpen}\n              clickback={this.handleMenuItemDismissal}>\n              {defaults.menu_items()}\n            </MenuItems>\n          </div>\n          <MusicBox\n            invokedMenuItems={exploded_menu_items}\n            clickback={this.handleMenuItemDismissal}\n            updateValue={this.updateMenuItemValue} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}