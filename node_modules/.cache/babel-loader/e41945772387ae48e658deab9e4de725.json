{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/philbrockman/coding/local-coding-projects/musicaldashboard-refactored/src/Layouts/MainContent/Randomize.js\";\nimport \"./Randomize.css\";\nimport Casino from '@material-ui/icons/Casino';\nimport TransitionHover from './IconHovered';\nimport React, { Component, useCallback } from 'react';\nimport defaults from '../../defaultMenuItems';\nconst options = defaults.to_arr(defaults.menu_items());\n\nfunction stateRandomizer(a, b) {\n  var _s = $RefreshSig$();\n\n  console.log(\"randomizing\");\n  options.map(_s(item => {\n    _s();\n\n    if (Math.random() > .5) {\n      if (item.inputType === \"slider\") {\n        console.log(item.title);\n        useCallback(() => {\n          a(item.title, Math.random() * (item.max - item.min) + item.min);\n        }, [b(item.title)]);\n      }\n    }\n  }, \"epj4qY15NHsef74wNqHIp5fdZmg=\"));\n}\n\nclass Randomizer extends Component {\n  constructor(props) {\n    super(props);\n    this.updateValue = this.props.updateValue.bind(this);\n    this.toggleMenuItem = this.props.toggleMenuItems.bind(this);\n  }\n\n  randomizeState() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shaker\",\n      children: /*#__PURE__*/_jsxDEV(TransitionHover, {\n        children: /*#__PURE__*/_jsxDEV(Casino, {\n          onClick: () => stateRandomizer(this.updateValue, this.toggleMenuItem),\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Randomizer;","map":{"version":3,"sources":["/Users/philbrockman/coding/local-coding-projects/musicaldashboard-refactored/src/Layouts/MainContent/Randomize.js"],"names":["Casino","TransitionHover","React","Component","useCallback","defaults","options","to_arr","menu_items","stateRandomizer","a","b","console","log","map","item","Math","random","inputType","title","max","min","Randomizer","constructor","props","updateValue","bind","toggleMenuItem","toggleMenuItems","randomizeState","render"],"mappings":";;AAAA,OAAO,iBAAP;AACA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,eAAP,MAA4B,eAA5B;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,WAA1B,QAA4C,OAA5C;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,MAAMC,OAAO,GAAGD,QAAQ,CAACE,MAAT,CAAgBF,QAAQ,CAACG,UAAT,EAAhB,CAAhB;;AAEA,SAASC,eAAT,CAAyBC,CAAzB,EAA4BC,CAA5B,EAA8B;AAAA;;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAP,EAAAA,OAAO,CAACQ,GAAR,IAAYC,IAAI,IAAI;AAAA;;AAClB,QAAGC,IAAI,CAACC,MAAL,KAAgB,EAAnB,EAAsB;AACpB,UAAGF,IAAI,CAACG,SAAL,KAAmB,QAAtB,EAA+B;AAC7BN,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACI,KAAjB;AACAf,QAAAA,WAAW,CACT,MAAM;AAACM,UAAAA,CAAC,CAACK,IAAI,CAACI,KAAN,EACSH,IAAI,CAACC,MAAL,MAAeF,IAAI,CAACK,GAAL,GAAWL,IAAI,CAACM,GAA/B,IAAsCN,IAAI,CAACM,GADpD,CAAD;AAC0D,SAFxD,EAGT,CAACV,CAAC,CAACI,IAAI,CAACI,KAAN,CAAF,CAHS,CAAX;AAKD;AACF;AACF,GAXD;AAYD;;AAED,MAAMG,UAAN,SAAyBnB,SAAzB,CAAmC;AACjCoB,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,WAAL,GAAmB,KAAKD,KAAL,CAAWC,WAAX,CAAuBC,IAAvB,CAA4B,IAA5B,CAAnB;AACA,SAAKC,cAAL,GAAsB,KAAKH,KAAL,CAAWI,eAAX,CAA2BF,IAA3B,CAAgC,IAAhC,CAAtB;AACD;;AAEDG,EAAAA,cAAc,GAAE,CACf;;AAEDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,eAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMrB,eAAe,CAAC,KAAKgB,WAAN,EAAoB,KAAKE,cAAzB,CAAtC;AAAgF,UAAA,KAAK,EAAC;AAAtF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAnBgC;;AAsBnC,eAAeL,UAAf","sourcesContent":["import \"./Randomize.css\"\nimport Casino from '@material-ui/icons/Casino';\nimport TransitionHover from './IconHovered'\nimport React, {Component, useCallback} from 'react'\n\nimport defaults from '../../defaultMenuItems'\nconst options = defaults.to_arr(defaults.menu_items())\n\nfunction stateRandomizer(a, b){\n  console.log(\"randomizing\")\n  options.map(item => {\n    if(Math.random() > .5){\n      if(item.inputType === \"slider\"){\n        console.log(item.title)\n        useCallback(\n          () => {a(item.title,\n                           Math.random()*(item.max - item.min) + item.min)},\n          [b(item.title)],\n        );\n      }\n    }\n  })\n}\n\nclass Randomizer extends Component {\n  constructor(props){\n    super(props);\n\n    this.updateValue = this.props.updateValue.bind(this)\n    this.toggleMenuItem = this.props.toggleMenuItems.bind(this)\n  }\n\n  randomizeState(){\n  }\n\n  render(){\n    return (\n      <div className=\"shaker\">\n        <TransitionHover>\n          <Casino onClick={() => stateRandomizer(this.updateValue , this.toggleMenuItem)} color=\"secondary\" />\n        </TransitionHover>\n      </div>\n    );\n  }\n}\n\nexport default Randomizer;\n"]},"metadata":{},"sourceType":"module"}