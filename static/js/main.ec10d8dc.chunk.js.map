{"version":3,"sources":["Layouts/IconHovered.js","Layouts/Header/Header.js","Layouts/Sidebar/MenuItems.js","defaultMenuItems.js","Layouts/MainContent/Randomize.js","Layouts/MainContent/MusicBoxInput.js","Layouts/Toaster.js","Layouts/MainContent/InputHeader.js","Layouts/MainContent/MusicBox.js","App.js","reportWebVitals.js","index.js"],"names":["customTheme","createMuiTheme","palette","primary","main","deepPurple","secondary","yellow","StyledIcon","styled","Icon","theme","transitions","create","duration","standard","TransitionHover","props","NoSsr","className","scale","children","Header","conditional_icon","this","sidebarOpen","color","IconButton","onClick","toggleSidebar","Component","InteractiveMenuItem","handleClick","e","stopPropagation","dissmissMenuItem","title","clickback","bind","style","stowed","MenuItem","innerContent","recurse","item","hasOwnProperty","menuOpen","invokedMenuItems","icon","name","map","includes","MenuItems","length","defaults","interactive","toParam","inputType","options","info_title","info_body","min","max","default","arr","filter","Array","isArray","flatten","flat","obj","interactive_menu_items","menu_items","to_arr","value","Randomizer","updateValue","toggleMenuItem","toggleMenuItems","randomizeState","MusicBoxInput","event","val","target","currentValue","update","concat","specific_item","find","step_size","inverted","Slider","track","onChange","handleChange","aria-labelledby","valueLabelDisplay","step","option_list","option","handleSelectionChange","current_value","type","id","handleCheckboxChange","checked","xmlns","viewBox","aria-hidden","focusable","fill","stroke","strokeWidth","d","htmlFor","Toast","close","showToaster","bool","visible","open","display","Alert","severity","action","aria-label","size","fontSize","AlertTitle","body","InputHeader","dissmissItem","state","st","boundShowToaster","setState","prevState","setOpen","MusicBox","resetState","gen_and_send","relevant","resetStateHandler","Input","placeholder","Button","variant","parameters","musenet_options","spec","email","document","getElementById","xhr","XMLHttpRequest","setRequestHeader","send","JSON","stringify","onload","console","log","responseText","data","parse","send_gen","shuffle","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","App","menuItems","initialState","handleViewSidebar","handleMenuItemDismissal","updateMenuItemValue","randTitle","newState","notStowed","round","ceil","temp","index","shuffled","slice","i","getRandomSubarray","newMenuItemsState","Object","assign","itemIdx","findIndex","newValue","sidebarClass","exploded_menu_items","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","routerBaseName","ReactDOM","render","basename","StrictMode"],"mappings":"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","file":"static/js/main.ec10d8dc.chunk.js","sourcesContent":["import * as React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport {\n  createMuiTheme,\n  ThemeProvider as MuiThemeProvider,\n} from '@material-ui/core/styles';\nimport { deepPurple, yellow } from '@material-ui/core/colors';\nimport Icon from '@material-ui/core/Icon';\n\nconst customTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[500],\n    },\n    secondary: {\n      main: yellow[300],\n    },\n  },\n});\n\nconst StyledIcon = styled(Icon)`\n  ${({ theme }) => `\n  cursor: pointer;\n  transition: ${theme.transitions.create(['background-color', 'transform'], {\n    duration: theme.transitions.duration.standard,\n  })};\n  &:hover {\n    transform: scale(2);\n  }\n  `}\n`;\n\nexport default function TransitionHover(props) {\n  return (\n    <NoSsr>\n      <MuiThemeProvider theme={customTheme}>\n        <ThemeProvider theme={customTheme}>\n          <StyledIcon className={props.scale}>{props.children}</StyledIcon>\n        </ThemeProvider>\n      </MuiThemeProvider>\n    </NoSsr>\n  );\n}\n","import IconButton from '@material-ui/core/IconButton';\nimport FormatIndentIncrease from '@material-ui/icons/FormatIndentIncrease';\nimport FormatIndentDecrease from '@material-ui/icons/FormatIndentDecrease';\nimport Mood from  '@material-ui/icons/Mood';\nimport React, {Component} from 'react'\n\n import TransitionHover from '../IconHovered'\n\n\nclass Header extends Component {\n  render(){\n    let conditional_icon = this.props.sidebarOpen ?\n    <TransitionHover><FormatIndentDecrease color=\"secondary\"/></TransitionHover>:\n    <TransitionHover><FormatIndentIncrease color=\"secondary\"/></TransitionHover>;\n\n    return (\n      <div className=\"header\">\n        <div className=\"header-content\">\n          <div>\n\n            <IconButton onClick={this.props.toggleSidebar} className=\"sidebar-toggle\">{conditional_icon}</IconButton>\n\n          </div>\n          <div className=\"mood\">\n            <Mood />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Header;\n","import \"./MenuItems.css\"\n\nimport Icon from '@material-ui/core/Icon';\nimport React, {Component} from 'react'\n\nclass InteractiveMenuItem extends Component {\n  constructor(props){\n    super(props);\n    this.dissmissMenuItem = this.props.clickback.bind(this)\n  }\n\n  handleClick = (e) => {\n    e.stopPropagation()\n    this.dissmissMenuItem(this.props.title)\n  }\n\n  render(){\n    const style = this.props.stowed ? \"interactive\" : \"interactive exit\";\n    return (\n      <div key={\"interactive-\"+this.props.title}\n           className={style}\n           onClick={this.handleClick}>\n           <Icon color=\"primary\">add_circle</Icon>\n          {this.props.children}\n      </div>\n    );\n  }\n}\n\nclass MenuItem extends Component {\n  constructor(props){\n    super(props);\n\n    this.clickback = this.props.clickback.bind(this)\n  }\n    render(){\n    let innerContent;\n\n    let recurse = this.props.item.hasOwnProperty(\"children\") ?\n    <MenuItems\n      key={\"menu-\"+this.props.item.title}\n      menuOpen={this.props.menuOpen}\n      invokedMenuItems={this.props.invokedMenuItems}\n      clickback={this.clickback}>\n    {this.props.item.children}\n    </MenuItems> :\n                                      \"\";\n\n    let icon    = this.props.item.hasOwnProperty(\"icon\") ?  <Icon>{this.props.item.icon.name}</Icon>: \"\";\n\n    //determine displaying all text or just label\n    if(this.props.menuOpen){\n      innerContent = (\n        <div className=\"menuItemContainer\">\n          <div className=\"label\">\n            {icon}\n            <div>\n            {this.props.item.title}\n            </div>\n          </div>\n          <div className=\"offset\">\n            {recurse}\n          </div>\n        </div>\n      );\n    } else {\n      innerContent = (\n        <span>\n          <div className=\"label\">\n            {icon}\n          </div>\n        </span>\n      );\n    }\n\n    innerContent = (\n      <div className=\"menuItem\">\n      {innerContent}\n      </div>\n    );\n\n    if(this.props.item.hasOwnProperty(\"stowed\")){\n        return (\n          <InteractiveMenuItem\n            title={this.props.item.title}\n            clickback={this.clickback}\n            invokedMenuItems={this.props.invokedMenuItems}\n            stowed={!this.props.invokedMenuItems.map(item => item.title).includes(this.props.item.title)}>\n              {innerContent}\n          </InteractiveMenuItem>\n        );\n    } else {\n      return innerContent;\n    };\n  }\n}\n\nclass MenuItems extends Component {\n  constructor(props){\n    super(props);\n    this.clickback = this.props.clickback.bind(this)\n  }\n  render(){\n    let items = this.props.children.map((item) => (\n      <MenuItem\n        invokedMenuItems={this.props.invokedMenuItems}\n        key={'parent-'+item.title}\n        menuOpen={this.props.menuOpen}\n        item={item}\n        clickback={this.props.clickback}\n      >\n        {this.props.invokedMenuItems.length}\n      </MenuItem>\n    ));\n\n    return items;\n  }\n}\n\nexport default MenuItems\n// dissmissMenuItem={this.handleMenuItemDismissal}\n","class defaults {\n  static menu_items() {\n  return(\n    [{\n      title: 'Vanilla MuseNet',\n      icon: { name: 'subject' },\n      children: [{\n          title: \"Composer\",\n          interactive: true,\n          stowed: true,\n          toParam: \"composer\",\n          inputType: \"select\",\n          options: [\n            'chopin',\n            'mozart',\n            'rachmaninoff',\n            'country',\n            'bach',\n            'beethoven',\n            'thebeatles',\n            'franksinatra',\n            'tchaikovsky'\n          ],\n          info_title: \"Choose the style of music for MuseNet to select.\",\n          info_body: \"\",\n        },\n        {\n          title: \"Instruments\",\n          interactive: true,\n          stowed: true,\n          toParam: \"instrumentation\",\n          inputType: \"checkboxinput\",\n          options: [\n            'piano',\n            'strings',\n            'winds',\n            'drums',\n            'harp',\n            'guitar',\n            'bass',\n          ],\n          info_title: \"MuseNet will attempt to generate a song with the checked instruments.\",\n          info_body: \"\",\n        },\n      ]\n    },\n    {\n      title: \"Shape & Form\",\n      icon: { name: \"playlist_add\" },\n      children: [\n        {\n          title: \"Temperature\",\n          interactive: true,\n          stowed: true,\n          toParam: \"temp\",\n          inputType: \"slider\",\n          min: .5,\n          max: 1.5,\n          default: .9,\n          info_title: \"Randomness during generation\",\n          info_body: \"A higher temperature will lead to more experimental outputs, while a smaller temperature might lead to overfitting.\",\n\n        },\n        {\n          title: \"Length\",\n          interactive: true,\n          stowed: true,\n          toParam: \"length\",\n          inputType: \"slider\",\n          min: 1,\n          max: 6,\n          default: 5,\n          info_title: \"Output length\",\n          info_body: \"Automatically request output from MuseNet this many times.\",\n        },\n      ]\n    },\n    {\n      title: 'Fine Tuning',\n      icon: { name: 'queue_music' },\n      children: [\n        {\n          title: \"Quality Control\",\n          interactive: true,\n          stowed: true,\n          toParam: \"cutoff\",\n          inputType: \"slider\",\n          min: 0,\n          max: 1,\n          default: .6,\n          info_title: \"Higher values = more likely to fail\",\n          info_body: \"Define the minimum percentage confidence that a given generation is of a suitable quality. Only the best for you!\",\n        },\n        {\n          title: \"Clip Length\",\n          interactive: true,\n          stowed: true,\n          toParam: \"clip_length\",\n          inputType: \"slider\",\n          min: 2,\n          max: 20,\n          default: 5,\n          info_title: \"Higher values = more likely to succeed\",\n          info_body: \"When scanning for chunks of repeated music, set the window size of a chunk to this many seconds.\",\n        },\n        {\n          title: \"Repetition Detection\",\n          interactive: true,\n          stowed: true,\n          toParam: \"repeat_percentage\",\n          inputType: \"slider\",\n          min: 0,\n          max: 1,\n          default: .15,\n          info_title: \"High values = more likely to succeed\",\n          info_body: \"Define the cutoff for the maximum percentage of a generation that can contain repeated sections.\",\n        },\n      ]\n    },\n    ]);\n  }\n\n  static test(){\n    return \"aoeu\"\n  }\n\n  static flatten(arr) {\n    if (arr.filter(e => Array.isArray(e)).length > 0) {\n      return this.flatten(arr.flat());\n    } else {\n      return arr;\n    }\n  }\n\n  static interactive_menu_items(obj) {\n    if(obj.hasOwnProperty(\"children\")) {\n      return obj.children.map(item => this.interactive_menu_items(item));\n    } else {\n      if (obj.hasOwnProperty(\"interactive\")) {\n        return obj;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  static to_arr(){\n    return this.flatten(this.menu_items().map(item => this.interactive_menu_items(item)).filter(item => item != null))\n  }\n\n  static initialState(){\n    return this.to_arr().map(item=> ({\n      title: item.title,\n      stowed: item.stowed,\n      value: item.default\n    }))\n  }\n}\n\n\n\nexport default defaults;\n","import \"./Randomize.css\"\nimport Casino from '@material-ui/icons/Casino';\nimport TransitionHover from '../IconHovered'\nimport React, {Component} from 'react'\nimport ReactDOM from 'react-dom';\n\n\nimport defaults from '../../defaultMenuItems'\nconst options = defaults.to_arr(defaults.menu_items())\n\nclass Randomizer extends Component {\n  constructor(props){\n    super(props);\n\n    this.updateValue = this.props.updateValue.bind(this)\n    this.toggleMenuItem = this.props.toggleMenuItems.bind(this)\n    this.randomizeState = this.props.randomizeState.bind(this)\n  }\n\n  handleClick(){\n    this.randomizeState();\n  }\n\n  render(){\n    return (\n      <div className={'shaker ' + this.props.scale}>\n        <TransitionHover>\n          <Casino onClick={() => this.handleClick()} color=\"secondary\" />\n        </TransitionHover>\n      </div>\n    );\n  }\n}\n\nexport default Randomizer;\n","import Slider from '@material-ui/core/Slider';\nimport React, {Component} from 'react'\n\nimport defaults from '../../defaultMenuItems'\nconst options = defaults.to_arr(defaults.menu_items())\n\nclass MusicBoxInput extends Component {\n  constructor(props){\n    super(props)\n\n    this.updateValue = this.props.updateValue.bind(this)\n  }\n\n  handleChange(event, val){\n    this.updateValue(this.props.item.title, val)\n  }\n\n  handleSelectionChange(event){\n    this.updateValue(this.props.item.title, event.target.value)\n  }\n\n  handleCheckboxChange(event, currentValue){\n    const target = event.target.value\n    let update\n    if(Array.isArray(currentValue)){\n      if(currentValue.includes(target)){\n        update = currentValue.filter(item => item !== target)\n      } else {\n        update =  currentValue.concat(target);\n      }\n    } else {\n      update = [target]\n    }\n    this.updateValue(this.props.item.title, update)\n    // this.updateValue(this.props.item.title, event.target.value)\n  }\n\n  render() {\n    const specific_item = options.find(item => item.title===this.props.item.title);\n\n    if(specific_item.inputType === \"slider\"){\n      const step_size = specific_item.max < 3 ? .01 : 1;\n      const inverted = specific_item.hasOwnProperty(\"inverted\") ? \"inverted\" : null;\n      return(\n        <div>\n        <Slider\n          value={this.props.item.value}\n          min={specific_item.min}\n          max={specific_item.max}\n          track={inverted}\n          onChange={(e,val) => this.handleChange(e,val)}\n          aria-labelledby=\"continuous-slider\"\n          valueLabelDisplay=\"auto\"\n          step={step_size}/>\n        </div>\n        );\n    } else {\n      if(specific_item.inputType === \"select\"){\n        const option_list = specific_item.options.map(option => (\n          <option\n            value={option}\n            key={\"option-\"+option}>\n              {option}\n          </option>\n        ))\n        return(\n          <div className=\"section-area\">\n            <select\n              className=\"select\"\n              value={this.props.item.value}\n              onChange={event => this.handleSelectionChange(event)} >\n              {option_list}\n            </select>\n            <span className=\"focus\"></span>\n          </div>\n        );\n      }if(specific_item.inputType === \"checkboxinput\"){\n        const current_value = this.props.item.value;\n        const option_list = specific_item.options.map(option => {\n          const style = Array.isArray(current_value) && current_value.includes(option) ? \"active\" : \"inactive\";\n\n          return(\n            <label key={\"checkbox-\"+option} className=\"checkbox\">\n              <span className=\"checkbox__input\">\n              <input\n                type=\"checkbox\"\n                id={option}\n                value={option}\n                onChange={(event) => this.handleCheckboxChange(event, current_value)}\n                checked={style===\"active\"}\n                name=\"checkbox\"/>\n                <span className=\"checkbox__control\">\n                  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' aria-hidden=\"true\" focusable=\"false\">\n                    <path fill='none' stroke='currentColor' strokeWidth='3' d='M1.73 12.91l6.37 6.37L22.79 4.59' /></svg>\n                </span>\n              </span>\n              <label className=\"radio__label\" htmlFor={option}>\n                {option}\n              </label>\n            </label>\n          );\n        });\n        return (\n          <div className=\"custom-control custom-checkbox \">\n            {option_list}\n          </div>\n        );\n      }\n    }\n  }\n}\n\nexport default MusicBoxInput;\n","\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport React, {Component} from 'react';\n\nclass Toast extends Component {\n  constructor(props){\n    super(props)\n\n    this.close = this.props.showToaster.bind(this)\n  }\n\n  handleClick(bool){\n    this.close(bool)\n  }\n\n  render(){\n    const visible = this.props.open ? \"block\" : \"none\";\n\n    return (\n        <div style={{display: visible}}>\n            <Alert\n              severity=\"info\"\n              action={\n                <IconButton\n                  aria-label=\"close\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={() => {\n                    this.handleClick(false);\n                  }}\n                >\n                  <CloseIcon fontSize=\"inherit\" />\n                </IconButton>\n              }\n            >\n            <AlertTitle>{this.props.title}</AlertTitle>\n            {this.props.body}\n            </Alert>\n        </div>\n      );\n  }\n}\n\nexport default Toast;\n","import RemoveCircle from '@material-ui/icons/RemoveCircle';\nimport NotListedLocationTwoToneIcon from '@material-ui/icons/NotListedLocationTwoTone';\n\nimport MusicBoxInput from \"./MusicBoxInput\";\nimport TransitionHover from '../IconHovered'\nimport React, {Component} from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Toast from \"../Toaster\";\n\nimport defaults from '../../defaultMenuItems'\nconst options = defaults.to_arr(defaults.menu_items())\n\nclass InputHeader extends Component {\n  constructor(props){\n    super(props);\n    this.dissmissItem = this.props.clickback.bind(this)\n    this.updateValue  = this.props.updateValue.bind(this)\n    this.state = {\n      open: false,\n    }\n    this.st = this.boundShowToaster.bind(this)\n  }\n\n  handleClick = (e) => {\n    e.stopPropagation()\n    this.dissmissItem(this.props.item.title)\n  }\n\n  boundShowToaster(bool) {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        open: bool,\n      };\n    })\n  }\n\n  render(){\n    const specific_item = options.find(item => item.title===this.props.item.title);\n    return (\n      <div className=\"MuseNetComponent\">\n\n      <Toast\n        open={this.state.open}\n        setOpen={this.state.setOpen}\n        showToaster={this.st}\n        title={specific_item.info_title}\n        body={specific_item.info_body}\n        />\n        <div className=\"mnc-header centered-header\">\n          <div>\n            <TransitionHover>\n              <RemoveCircle\n                color=\"secondary\"\n                key={\"interactive-\"+this.props.item.title}\n                onClick={this.handleClick} />\n            </TransitionHover>\n          </div>\n          <div>\n            {this.props.item.title}\n          </div>\n          <div>\n            <IconButton\n              onClick={() => this.boundShowToaster(!this.state.open)}>\n                <TransitionHover>\n                  <NotListedLocationTwoToneIcon color=\"secondary\" />\n                </TransitionHover>\n            </IconButton>\n          </div>\n        </div>\n        <MusicBoxInput\n          item={this.props.item}\n          updateValue={this.updateValue}\n          />\n      </div>\n    );\n  }\n}\n\nexport default InputHeader;\n","import Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport FiberNewTwoToneIcon from '@material-ui/icons/FiberNewTwoTone';\n\nimport TransitionHover from '../IconHovered'\n\nimport \"./MusicBox.css\";\nimport \"./checkbox.scss\";\nimport \"./MuseNetComponent.css\"\nimport Randomizer from \"./Randomize\"\nimport InputHeader from \"./InputHeader\"\n\nimport React, {Component} from 'react';\n\n\nimport defaults from '../../defaultMenuItems'\nconst options = defaults.to_arr(defaults.menu_items())\n\nfunction send_gen(parameters){\n  let musenet_options = (parameters.map(item => {\n    let found_item = options.find(spec => item.title===spec.title);\n    return [found_item.toParam, item.value]\n  }))\n\n  musenet_options = {\n    ...musenet_options,\n    email: document.getElementById(\"email\").value,\n  }\n\n  const action = \"https://www.1click2music.com/app/make_song\"\n\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", action, true);\n  xhr.setRequestHeader('Content-Type', 'application/json');\n  xhr.send(JSON.stringify(musenet_options));\n  xhr.onload = function() {\n    console.log(\"HELLO\")\n    console.log(this.responseText);\n    var data = JSON.parse(this.responseText);\n    console.log(data);\n  }\n\n}\n\nclass MusicBox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.dissmissMenuItem = this.props.clickback.bind(this);\n    this.updateValue      = this.props.updateValue.bind(this);\n    this.resetState       = this.props.resetState.bind(this);\n    this.randomizeState   = this.props.randomizeState.bind(this);\n  }\n\n  resetStateHandler(event) {\n    this.resetState();\n  }\n\n  render() {\n    let gen_and_send\n    let relevant = this.props.invokedMenuItems.map(item => {\n      return(\n          <InputHeader\n            key={\"input-\"+item.title}\n            clickback={this.dissmissMenuItem }\n            item={item}\n            updateValue={this.updateValue}\n            />\n      );\n    })\n\n    if(relevant.length === 0){\n      relevant =  (<div className=\"placeholder\"></div>);\n      gen_and_send = null;\n    } else{\n      gen_and_send = (\n        <div className=\"options-have-been-selected\">\n          <span className=\"refresher\">\n            <TransitionHover>\n              <FiberNewTwoToneIcon color=\"secondary\" onClick={(event) => this.resetStateHandler()} />\n            </TransitionHover>\n          </span>\n          <span>\n            <Input\n              className=\"inputemail\"\n              placeholder=\"Enter email...\"\n              id=\"email\"\n              />\n            <Button\n              variant=\"contained\"\n              className=\"submitbutton\"\n              onClick={() => send_gen(this.props.invokedMenuItems)}>\n              create</Button>\n          </span>\n        </div>\n        );\n    }\n\n    let scale = null\n    if(!gen_and_send){\n      scale = \"only-element\"\n    }\n\n    return (\n      <div className=\"music-box\">\n        <div className=\"submit-form centered-header\">\n          {gen_and_send}\n\n          <Randomizer\n            scale={scale}\n            updateValue={this.updateValue}\n            toggleMenuItems={this.dissmissMenuItem}\n            randomizeState={this.randomizeState}/>\n        </div>\n        <div className=\"playarea\">\n          {relevant}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MusicBox;\n","import './App.css';\nimport './index.css';\nimport \"./Layouts/Sidebar/SideBar.css\"\n\nimport Header from './Layouts/Header/Header';\nimport MenuItems from \"./Layouts/Sidebar/MenuItems\";\nimport MusicBox from \"./Layouts/MainContent/MusicBox\";\n\nimport React, {Component} from 'react';\n\nimport defaults from './defaultMenuItems';\nfunction shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nfunction getRandomSubarray(arr, size) {\n    var shuffled = arr.slice(0), i = arr.length, temp, index;\n    while (i--) {\n        index = Math.floor((i + 1) * Math.random());\n        temp = shuffled[index];\n        shuffled[index] = shuffled[i];\n        shuffled[i] = temp;\n    }\n    return shuffled.slice(0, size);\n}\n\nclass App extends Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      menuItems: defaults.initialState(),\n      sidebarOpen: false,\n    };\n\n    this.handleViewSidebar = this.handleViewSidebar.bind(this);\n    this.handleMenuItemDismissal = this.handleMenuItemDismissal.bind(this);\n    this.updateMenuItemValue = this.updateMenuItemValue.bind(this);\n    this.resetState = this.resetState.bind(this)\n    this.randomizeState = this.randomizeState.bind(this)\n  }\n\n  resetState(){\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        menuItems: defaults.initialState(),\n      }\n    });\n  }\n\n\n  randomizeState(){\n    const options = defaults.to_arr(defaults.menu_items());\n\n    const randTitle = options[Math.floor(Math.random()*options.length)].title\n\n    const newState = options.map(item => {\n      let notStowed = Math.random() < .5 || item.title === randTitle;\n      let value = item.default\n\n      if(notStowed) {\n        switch (item.inputType) {\n          case \"slider\":\n            value = Math.random()*(item.max - item.min)+item.min;\n            if (item.max < 3){\n              value = Math.round(value*100)/100\n            } else {\n              value = Math.ceil(value)\n            }\n            break;\n          case \"select\":\n            value = item.options[Math.floor(Math.random()*item.options.length)];\n            break;\n          case \"checkboxinput\":\n            value = getRandomSubarray(item.options, 3);\n            break;\n          default:\n            console.log('>> broke')\n            break;\n        }\n      }\n\n      return {\n           title: item.title,\n           stowed: !notStowed,\n           value: value,\n      }\n    })\n\n    this.setState( {\n      menuItems: shuffle(newState),\n      sidebarOpen: true,\n    })\n  }\n\n  handleMenuItemDismissal(title){\n    let newMenuItemsState = Object.assign([], this.state.menuItems);\n    const itemIdx = newMenuItemsState.findIndex(item => item.title===title);\n\n    newMenuItemsState[itemIdx] = {\n      ...newMenuItemsState[itemIdx],\n      stowed: !newMenuItemsState[itemIdx].stowed\n    };\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        menuItems: newMenuItemsState\n      }\n    });\n  }\n\n  updateMenuItemValue(title, newValue){\n    let newMenuItemsState = Object.assign([], this.state.menuItems);\n    const itemIdx = newMenuItemsState.findIndex(item => item.title===title);\n\n    newMenuItemsState[itemIdx] = {\n      ...newMenuItemsState[itemIdx],\n      value: newValue,\n    };\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        menuItems: newMenuItemsState\n      }\n    });\n  }\n\n  handleViewSidebar(){\n    this.setState(prevState => {\n      return{\n        ...prevState,\n        sidebarOpen: !this.state.sidebarOpen,\n      }\n    });\n  }\n\n  render(){\n    var sidebarClass = this.state.sidebarOpen ? 'sidebar open' : 'sidebar closed';\n    var exploded_menu_items = this.state.menuItems.filter(item => !item.stowed)\n\n    return (\n        <div className=\"App\">\n          <Header toggleSidebar={this.handleViewSidebar} sidebarOpen={this.state.sidebarOpen} />\n\n          <div className={sidebarClass}>\n            <MenuItems\n              invokedMenuItems={exploded_menu_items}\n              menuOpen={this.state.sidebarOpen}\n              clickback={this.handleMenuItemDismissal}>\n              {defaults.menu_items()}\n            </MenuItems>\n          </div>\n          <div className=\"content-area\">\n            <MusicBox\n              invokedMenuItems={exploded_menu_items}\n              clickback={this.handleMenuItemDismissal}\n              updateValue={this.updateMenuItemValue}\n              resetState={this.resetState}\n              randomizeState={this.randomizeState}/>\n          </div>\n\n\n\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst routerBaseName = \"/static\"//process.env.PUBLIC_URL;\nconsole.log(\"test\")\nconsole.log(\"basename: \" + routerBaseName)\n\n\nReactDOM.render(\n  <Router basename={routerBaseName}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}